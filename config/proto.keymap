/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        braceL {
            bindings = <&kp RA(NUMBER_7)>;
            key-positions = <4 14>;
            layers = <0>;
        };

        parenL {
            bindings = <&kp LS(NUMBER_8)>;
            key-positions = <3 13>;
            layers = <0>;
        };

        brackL {
            bindings = <&kp RA(NUMBER_8)>;
            key-positions = <12 2>;
            layers = <0>;
        };

        braceR {
            bindings = <&kp RA(NUMBER_0)>;
            key-positions = <5 15>;
            layers = <0>;
        };

        parenR {
            bindings = <&kp LS(NUMBER_9)>;
            key-positions = <6 16>;
            layers = <0>;
        };

        brackR {
            bindings = <&kp RA(NUMBER_9)>;
            key-positions = <7 17>;
            layers = <0>;
        };

        bootloadL {
            bindings = <&bootloader>;
            key-positions = <0 1>;
            layers = <5>;
        };

        bootloadR {
            bindings = <&bootloader>;
            key-positions = <9 8>;
            layers = <1>;
        };

        dot {
            bindings = <&kp DOT>;
            key-positions = <16 26>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <17 27>;
        };

        dash {
            bindings = <&kp SLASH>;
            key-positions = <18 28>;
        };

        gt_lt {
            bindings = <&kp NON_US_BACKSLASH>;
            key-positions = <30 20>;
        };
    };

    behaviors {
        GerSonderzeichen: GerSonderzeichen {
            compatible = "zmk,behavior-hold-tap";
            label = "GERSONDERZEICHEN";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        HomeRowMods: HomeRowMods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWMODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            flavor = "balanced";
        };

        ThumbLayerMods: ThumbLayerMods {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMBLAYERMODS";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC  &kp W                &kp F                        &kp P                  &kp B                                                        &kp J                        &kp L                     &kp U                 &kp Y                &tog 6
&kp Q    &HomeRowMods LALT R  &HomeRowMods LEFT_CONTROL S  &HomeRowMods LSHFT T   &HomeRowMods LEFT_GUI G                                      &HomeRowMods RIGHT_GUI M     &HomeRowMods RSHIFT N     &HomeRowMods RCTRL E  &HomeRowMods RALT I  &kp BACKSLASH
&kp A    &kp X                &kp C                        &kp D                  &kp V                                                        &kp K                        &kp H                     &kp SQT               &kp LEFT_BRACKET     &kp O
&kp Z    &trans                                            &ThumbLayerMods 2 TAB  &ThumbLayerMods 4 SPACE  &ThumbLayerMods 5 ENTER  &kp ENTER  &ThumbLayerMods 1 BACKSPACE  &ThumbLayerMods 3 DELETE                        &kp MINUS            &kp SEMICOLON
            >;
        };

        Nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &kp K_CUT    &kp PG_UP          &kp INS         &kp PAGE_DOWN    &sys_reset
&trans  &trans  &trans  &trans  &trans                  &kp K_COPY   &kp LEFT_ARROW     &kp UP_ARROW    &kp RIGHT_ARROW  &trans
&trans  &trans  &trans  &trans  &trans                  &kp K_PASTE  &mt LC(HOME) HOME  &kp DOWN_ARROW  &mt LC(END) END  &trans
&trans  &trans          &trans  &trans  &trans  &trans  &trans       &trans                             &trans           &trans
            >;

            label = "Nav";
        };

        Media {
            bindings = <
&ext_power EP_TOG  &trans        &kp C_VOLUME_UP   &kp C_STOP  &bt BT_CLR                  &trans  &trans  &trans  &trans  &trans
&out OUT_TOG       &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT  &trans                      &trans  &trans  &trans  &trans  &trans
&bt BT_NXT         &bt BT_PRV    &kp C_VOL_DN      &kp C_MUTE  &trans                      &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0       &bt BT_SEL 1                    &trans      &trans      &trans  &trans  &trans  &trans          &trans  &trans
            >;

            label = "Media";
        };

        Num {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &kp KP_NUMLOCK   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9      &kp KP_DIVIDE
&trans  &trans  &trans  &trans  &trans                  &kp KP_EQUAL     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6      &kp KP_MULTIPLY
&trans  &trans  &trans  &trans  &trans                  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3      &kp KP_SUBTRACT
&trans  &trans          &trans  &trans  &trans  &trans  &trans           &trans                            &mt KP_DOT KP_COMMA  &kp KP_PLUS
            >;

            label = "Num";
        };

        Sym {
            bindings = <
&trans             &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL                  &trans  &trans  &trans  &trans  &trans
&kp GRAVE          &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS                  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_0       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PIPE                   &trans  &trans  &trans  &trans  &trans
&kp RIGHT_BRACKET  &trans                      &trans        &trans     &trans  &trans  &trans  &trans          &trans  &trans
            >;

            label = "Sym";
        };

        Fun {
            bindings = <
&sys_reset  &kp F7              &kp F8  &kp F9  &kp PRINTSCREEN                  &trans  &trans  &trans  &trans  &trans
&kp F12     &kp F4              &kp F5  &kp F6  &kp SCROLLLOCK                   &trans  &trans  &trans  &trans  &trans
&kp F11     &kp F1              &kp F2  &kp F3  &kp PAUSE_BREAK                  &trans  &trans  &trans  &trans  &trans
&kp F10     &kp K_CONTEXT_MENU          &trans  &trans           &trans  &trans  &trans  &trans          &trans  &trans
            >;

            label = "Fun";
        };

        Gaming {
            bindings = <
&kp GRAVE  &kp Q         &kp X  &kp E    &kp R                     &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp A         &kp W  &kp D    &kp F                     &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp Z         &kp S  &kp C    &kp V                     &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp LEFT_ALT         &kp ESC  &kp SPACE  &mo 3  &trans  &trans  &trans          &trans  &trans
            >;

            label = "Gaming";
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans          &trans          &trans           &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans          &mmv MOVE_DOWN  &trans           &mkp LCLK
&trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans                          &mkp MCLK        &mkp RCLK
            >;
        };
    };
};
